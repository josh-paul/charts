#replicaSet: chunky
replicas: 3
minAvailable: 1
port: 27017

auth:
  enabled: true
  adminUser: mongokubeadmin
  adminPassword: 8hH4bw1CnmaQda3nmFVaPFeeUahQpLLq
  key: MFpEbzd1am5OS1ljUkVWTW5rZVV2c2p5VFZtNDBRMXZlWHVZc3hxUGpVeGxMYmV6MVZKNUh6N3BNanM2V1JZdEFFampqMWkwTmoyVGRrU2tST2hIMzY1ZEVQV2ZGWDY3dk91amlzRFNDRU1JWlVDRlhDY3FnMFZPYm40UExyeXh1ZkVhOTg5YVozeTVuN2VRNFRHeDNXRkN3b29lR294dnE4Z0syUWNPUkpqMlpzMm1Fd09qZDF2dEVVSVVhOUxtVGh6NzhVOUpjVVlVUGRWZGpSaDR6WktFNlFNZEdINHFjSTFLcnZLUHN1ZVpxd2oySlI2RWVKb3A4S1ppM1pFYkgwcmlzT1pYNW1DazNNeFluemo5NjRudmRucFRBVlBKYmVIbnl5Wk51ejZ1QjBoQ0FCZ1c3OHFhU2l0MGFHVnRBbGtPT2hRWFFzc2d6ZHNidWVacXAwQ0I2M3JIdlBhdVBBTWxKMlJnNlNodVNhbm5YM2xoekx0M3RaS2JHdERrNUxvZmt6ek9zV3A4TzFVQndjOURlOVVxajdKU0dYeHR3Z3ZpMWI2VXVkSVV0WlVJMkYzVWt3UWppNFVNOTRRUFYzd3Vha1NjY05rTlYyYUZ3OG9OUWd1ODlYNlh3c3dZZnJXMWs3amhKcm5uRWw1YUxna240VkpiMXBnWlJkR3cK
  # existingKeySecret:
  # existingAdminSecret:

# Specs for the Docker image for the init container that establishes the replica set
installImage:
  name: 373628545353.dkr.ecr.us-west-2.amazonaws.com/canaveral-infra/mongodb-install
  tag: latest
  # name: k8s.gcr.io/mongodb-install
  # tag: 0.5
  pullPolicy: Always

# Specs for the MongoDB image
image:
  name: mongo
  tag: 3.6
  pullPolicy: Always

# Annotations to be added to MongoDB pods
podAnnotations: {}

resources: {}
# limits:
#   cpu: 500m
#   memory: 512Mi
# requests:
#   cpu: 100m
#   memory: 256Mi

## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector:
  fleet: mongo

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: scheduling
          operator: In
          values:
            - single
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
          matchLabels:
            scheduling: single
      topologyKey: "kubernetes.io/hostname"

tolerations: []

persistentVolume:
  enabled: true
  ## mongodb-replicaset data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: mongo-storage-class
  accessModes:
    - ReadWriteOnce
  size: 250Gi
  annotations: {}

# Annotations to be added to the service
serviceAnnotations: {}

tls:
  # Enable or disable MongoDB TLS support
  enabled: false
  # Please generate your own TLS CA by generating it via:
  # $ openssl genrsa -out ca.key 2048
  # $ openssl req -x509 -new -nodes -key ca.key -days 10000 -out ca.crt -subj "/CN=mydomain.com"
  # After that you can base64 encode it and paste it here:
  # $ cat ca.key | base64 -w0
  # cfssl ca
  # cacert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYwRENDQTdpZ0F3SUJBZ0lVSnh0NThTYmtOMUpkdTBnZlczcVUwMUExcGVzd0RRWUpLb1pJaHZjTkFRRU4KQlFBd2FqRUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdUQWtOQk1SRXdEd1lEVlFRSEV3aFRZVzRnU205egpaVEVRTUE0R0ExVUVDaE1IVG5WMFlXNXBlREVMTUFrR0ExVUVDeE1DV0dreEhEQWFCZ05WQkFNVEUwTmhibUYyClpYSmhiQ0F0SUZKdmIzUWdRMEV3SGhjTk1UZ3dNekk0TWpBeU5EQXdXaGNOTWpNd016STNNakF5TkRBd1dqQnkKTVFzd0NRWURWUVFHRXdKVlV6RUxNQWtHQTFVRUNCTUNRMEV4RVRBUEJnTlZCQWNUQ0ZOaGJpQktiM05sTVJBdwpEZ1lEVlFRS0V3ZE9kWFJoYm1sNE1Rc3dDUVlEVlFRTEV3SllhVEVrTUNJR0ExVUVBeE1iUTJGdVlYWmxjbUZzCklDMGdTVzUwWlhKdFpXUnBZWFJsSUVOQk1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0MKQWdFQXhXVjJHMncrR3Bvb1F6OXJ2UHNEMm41QlFFRStjRnhOZWhEMEYrSjJVUHJUaXExMFgrT01lUHBydFRGWQpTcmpuOFBXOVhhMmpMR0thMGhySEVlVXVzUEEza2x3eDE5czhwTFVQQ3c5MVJmNXgzamlIaDZDenlSL1BLcDVmCjNsM2FQLzg4MXZIODFFRnZKaHArVmRpbUV3WlpzQWpPcEZqZTdKUllKYVdHUndOc082L0dxRkxQRCt0TE9QZE4KRHYzS3FqVEhRUnExVHZVeWo1SHpXUTBQamdOei9zdkEyRjk2NVhQYWM5QVN4cXVLRnJ3cThyUDloOUIwd2pBbQpsSDhBRldicHF3UU1EYjN4cGY2VkhxcGVjRlYxN295ZW1xYWE2S1dlTGdkREtjVGwrc01PYnVwMDZUTGtTR3NBCk9wWVdNZlFsKzYrSzE2QnZwSnFpeU5yVUhiUktZNGd6Q3VVejFFeVVaYTRoTEhFYTFINXh6OGU3dFJta3ZsLzUKWUFZVStuTlRtNm05cXlWb2FrRGFLTlYxUGtCY3BsRlMzU0toK256UnltMjZKUHBORWxYOTFnak1VVTV6eWkragowVlZNUlNBc2JvNTBGekZlVnVTWGU1UmxVT2QzZXZFRHMyY3dPNmorcDNCK2hKTWRDeElOUFhxc3dMZ2tTWFlrCktTejB0WnRid3VoVmw1N1I0WldkQ1lCcXBHNExDeUw3aW4wNTZ5QUJWeFRnbW1MWXVjZWhqQi9sTU5hU3JVa0EKYnpaUldrVXdGSlo5QnJsU0tsLzVyQmthUTdUUHBiM0l0L3IwOWdxdS9FdTIxVlVNTDUwZGRLLzF2a2g1ZVNQbwpONzJnZ3psNTVkek1jK3VHRzdpNDhubCtJVGI4cFNLRXVkQjYwbVVWSExkclpvMENBd0VBQWFObU1HUXdEZ1lEClZSMFBBUUgvQkFRREFnR0dNQklHQTFVZEV3RUIvd1FJTUFZQkFmOENBUUF3SFFZRFZSME9CQllFRk0xbWQ4eGcKbGllT1hjM0txVk9FVldpR2FvTkJNQjhHQTFVZEl3UVlNQmFBRk1JQWtUNEk3d0FlMEVVNXZmeVFwT05lOENNNgpNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUNBUUE1L0Q1VEI0cmUxSnFIaUNoZGxoLzBvYzd5SXh2eEZxeUVXSTFMCmJwN0VWaDlNZ3lNRTNBb0FOaHhwOXBwNFliQXZQd3JuYnIwaHMxR0QwdW4yQWFETjhoU3ZDakR5LzBLY1J1d2IKU2hGbm5YOU14T2NIa0JSVXBQakFUUjhBSklYV3BtQU85WkRIWkhZTDlhVG5abFZjRHpxbHh0dXZ2WUdrcmliRgpncjBDdlpyWDFuTkNlQlJFYU1VeXJOZVFiS201SFNPQ0hCeGFZV1dyanNOMWJOeC83UFQ0WDg1c0pLbWdZenNpCnZBOXpURkFGdEJQY0x0YnFzY2lLV2pWbEk3d0tXTkY3WmJLeDFVREFtN0llOUJLK1VZZkZGODVXMXRBeEgxSDUKVk1oVnhybm00bEtzUkJkaVJiTFV1T3dyY0MvYjhZbUFyc2xhRmtEU1RCd2pyaVh6bXpBbmorSnhpenF1dm5tZQpnbGtNSDMwWE9ueUloSHM2Nlltdm1tRTB6QTM4U3ZkTEw3R3pHQXFDN0FFRTljOFZTYmRVM3RCc0FRQnBLSTRkCmxSbExYT2YrK2tzNjNrTS9ydkl1cWY2cE13aGR5ZC95bTlYeHF4K040MzNFWUVET2tlTWtqaklWZDZsUTdRc0EKaXJ1NHJENDRQQjJET2dBclEzWVd4VkZycWp4MklLaWY4ZkVIZ0haMzFSRkRDTGU2KzRoR3RheTRZRVVTQ0E2UgovV3pyMnNzM3pwaGVqeS9wN2taM3IycG5mYXduay9SVFJoRGhvdGlXZ0F2TkZoRHRCSjQ2QlBwWlIwckd2SUo4ClNaVDdZYk1lTHl0QkxyYUJlUUZ3ekVscEs2djdTdXF0YVpBRkF5UGkyUVdQOGRna1pDUnErZDNBVFRBNTZrSmcKVGQ0QnRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRnBEQ0NBNHlnQXdJQkFnSVVmb3VmeUkxOTgyV0tZZXBtVWJhQ2dlSVQ3UXd3RFFZSktvWklodmNOQVFFTgpCUUF3YWpFTE1Ba0dBMVVFQmhNQ1ZWTXhDekFKQmdOVkJBZ1RBa05CTVJFd0R3WURWUVFIRXdoVFlXNGdTbTl6ClpURVFNQTRHQTFVRUNoTUhUblYwWVc1cGVERUxNQWtHQTFVRUN4TUNXR2t4SERBYUJnTlZCQU1URTBOaGJtRjIKWlhKaGJDQXRJRkp2YjNRZ1EwRXdIaGNOTVRnd016STRNVGsxT0RBd1doY05Namd3TXpJMU1UazFPREF3V2pCcQpNUXN3Q1FZRFZRUUdFd0pWVXpFTE1Ba0dBMVVFQ0JNQ1EwRXhFVEFQQmdOVkJBY1RDRk5oYmlCS2IzTmxNUkF3CkRnWURWUVFLRXdkT2RYUmhibWw0TVFzd0NRWURWUVFMRXdKWWFURWNNQm9HQTFVRUF4TVRRMkZ1WVhabGNtRnMKSUMwZ1VtOXZkQ0JEUVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTStURUkwZQp4T3grQ082eUthZ0tDbkF5TS9xeDMraFBFYmFGbXBaV0ZQdWk5cU80R09YOUhMV3FBTG5mZnFGVy93cGNhZng5Cjh3WEo5V1VzNUlNZmVCNWNQVEM0WTFlOGNYbTErWnNZeHRrTjBwNkRJZ1dTUmMzQ0lSdUNrQUpCNmxWZ0gxUE8KL28xZVBsdlJ3dTdubDBiVHl0NjdkWFNvajIzeDFEdEJ2alFpa3o1eDh0UnJ6ZFdYWFhVWGFkczdXY3pWU1A1ego1RWhWbitWV2dyVGJoblk3YjF5K1lVYlBLMHovUVpvdnhTaDBWMHZjVEdBNUlHMHVhNmc1Z0ZtWUoyOWQzdFZhClFVMUpkSXVLa0FEZXhnTTlJRGZEZk9JenVlQUxqVmFuMEgrNVA4a0FkN2pyMkwwVkIrRm82bCtRby9XMEdUdmcKL2Rydm5BRVRqSk5IZk55OEZkRFl5RUJvMXl6c3hPaHlJY3loVFRxMHg3YWNkWWdVS1VxMkx2RWYrY3MzZ3oxMQovb3cyMU9iYktrTTJIcUpDM2JvSktIT3poaTdlWUdRZlN5Zy9paXNGNC9pOTNJQkNUQlh2N1FxRVI0R1R3S1dBCjJJejJyb0FUSzJ1dTNqNGY2SzRyTVVrajV6eXlUcWtNVUVwZENOS2Y1T01tUUhHNzh4MjAwc0hPY29xUTRuUG0KdlJybkF5Vzl0QzV1a0tlR2hqRFIrYXRBUk9qRHM3NXpZOUNjcmZtMk5aSm8xLzhWQlZJclpkaExoYkplMTk2ZApDVEkzZnNkWnZ3TkZaSGR6d09MSFVSL01sTzA4ZWFST1ljS2NCZitFODExZEhEaTdwWllQY3RPZnZsSVFHRlByCjRMQW05Rit5T0k4d0k2dFN5dzc1d1FITEY1MVk0ZjRoUW5aUkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQkJqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVENBSkUrQ084QUh0QkZPYjM4a0tUagpYdkFqT2pBTkJna3Foa2lHOXcwQkFRMEZBQU9DQWdFQXRHM3Z3M1ArY2hZQnA3YVNENVVCUXUxc2thbzBJUjdlCkFKWWYzQmx0OS9BdFlVdldWY0hSa3ZnYUdpeE9QTHFQTml6Y25sbFkxRXRCVE9sVWcwNGcrM0xWR3FYUFI2NkcKK2F3K05zNS9hY0RqeU5iaTc4UW9ZVVVBZzZBempJQ2w4d3VoR2Jtdmhjalc1VUI0cTJpTG5Cc1k2SzNzKy85egoyZTNYQk1uQkFqaFp1elpLL3M3Y2x2YVRFdWNLbnFqZjN1LzByUk5SSERzNDlFNWlyODhFYy9KQ2NOUURkYTkyCjV4OG1WN1cwUStaZmhuZ1dnZmVGUEFPUVdhdjJ2ZDNPUWxKT3FhdjVJL0xWRlBvTmRuMDF2YXRmMW9JeGRpRzkKUmRBbkJuWlQyc1Bod1VFR0djbUc3djJwd1hNRVRtc3J2ZHZ2Rjd5NzZDLzNKTFJWQXlBQmZMaG0rLzlpOWMxSwoyVFQrWjFwMjhwSW5DbEU2QXY2d1QvUWM5b296VWZMN0pDT3VlZzNOc1AxN1dnRmdkdlVIcnlOenI0SlhRb29qCk9LSW90UmtyNUM3VEMrL2FOVkJrcGpUMmRHYWhGZkdqOXhpVWs1Q1dldTRMNEV1MmphUG45eUVObVRkUDVEQ1IKVUxjMzlKQUU0eGl5Q1hXSGJKa2U1Y3dJMSt3WmJ6MzdMNUtrQVBMWnFsNnVEd082Y2c2bTVnbDQxTEZXQTgxVQp2WnlnYmJOQjhyTnZQcW1xaC9XdENwWHdtbDN0SGdwNHJDb2dxdXZRc2c0djlPTUpKazhIZ0ZLVTJHM2gxWk90CkRVb1dCbEw1U0ZxU2Zra20zdStTdDEyaStaZkRZYlNMU2FRelgySCtGcERyRUgxY2ZvL1RJckFuUDBmTmN0a2IKUTBxbHZlRm1yNmM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  # cakey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeFdWMkcydytHcG9vUXo5cnZQc0QybjVCUUVFK2NGeE5laEQwRitKMlVQclRpcTEwClgrT01lUHBydFRGWVNyam44UFc5WGEyakxHS2EwaHJIRWVVdXNQQTNrbHd4MTlzOHBMVVBDdzkxUmY1eDNqaUgKaDZDenlSL1BLcDVmM2wzYVAvODgxdkg4MUVGdkpocCtWZGltRXdaWnNBak9wRmplN0pSWUphV0dSd05zTzYvRwpxRkxQRCt0TE9QZE5EdjNLcWpUSFFScTFUdlV5ajVIeldRMFBqZ056L3N2QTJGOTY1WFBhYzlBU3hxdUtGcndxCjhyUDloOUIwd2pBbWxIOEFGV2JwcXdRTURiM3hwZjZWSHFwZWNGVjE3b3llbXFhYTZLV2VMZ2RES2NUbCtzTU8KYnVwMDZUTGtTR3NBT3BZV01mUWwrNitLMTZCdnBKcWl5TnJVSGJSS1k0Z3pDdVV6MUV5VVphNGhMSEVhMUg1eAp6OGU3dFJta3ZsLzVZQVlVK25OVG02bTlxeVZvYWtEYUtOVjFQa0JjcGxGUzNTS2grbnpSeW0yNkpQcE5FbFg5CjFnak1VVTV6eWkrajBWVk1SU0FzYm81MEZ6RmVWdVNYZTVSbFVPZDNldkVEczJjd082aitwM0IraEpNZEN4SU4KUFhxc3dMZ2tTWFlrS1N6MHRadGJ3dWhWbDU3UjRaV2RDWUJxcEc0TEN5TDdpbjA1NnlBQlZ4VGdtbUxZdWNlaApqQi9sTU5hU3JVa0FielpSV2tVd0ZKWjlCcmxTS2wvNXJCa2FRN1RQcGIzSXQvcjA5Z3F1L0V1MjFWVU1MNTBkCmRLLzF2a2g1ZVNQb043Mmdnemw1NWR6TWMrdUdHN2k0OG5sK0lUYjhwU0tFdWRCNjBtVVZITGRyWm8wQ0F3RUEKQVFLQ0FnQVVMV0hjUGIwL1pPQ1d0eVhoSkZ0cGV4eGFZQkRzMVZLS0ZxK012WFpRb3NMNjJ1NFpXeDRodzU4OAozelZpTmZKbmZBY0dTMWh4a2dhM1VVdGw5ZUpHN2RjUVcrSXdhVldTbEh0Y0t4Rld2VUtRYjREVENVYzNXTXdKClZEVUNldDl6U1RqRDArcC9HODBydk91TEJPRTg4cG82Vnp3Z0tvRm05MmJuT2pzMmlSQUlMZGlGbmlsU1BEL3QKSzhJeHRSbUJPbkhmb3NaRHN1YWZMRkVPbWpvcnp3aU5VL0I3Ylk4WFl6ZENQVk9lQVN6VlZCaWp4R2cyK01UbQprSnR3OUdaaXlhazY5T2Z5ZzZidXk4NGNXMWZaN2JKblZ2Smpab0pSSTVTK3FibGd6S0toZGt6RVk2emRwWGtXCk9mSEZDMUJyZk1SaExMbHBmeG5LWHBBakxkTWVwRGhkZUsvaGZEMFNQTU91U2pBK0hYZzZaMkRDem9jNTNBQjYKbnVDc2g4a2FkNm9OWStJU2xnb0VQZGs5MGdSMUtNUy9GMFd3OU9zaC9nL29PRzB2dnZ4dE5VTzJEV1ovSmR2bwo5MGZLaVRGQWlSM0RTc01JcnRrUUJwazNZZW4vUVVZYlBQZHRzT210bEIyMkZHZDlndlN2cHJseGx5ZTJtK1Y5ClhxbW1GV0dGbU5GVFB3VUduaW9tVXJ2cFpCRlh1b3paemR5b2srWENpVHoydEV3b2lKaU9XSWs2MjZPRXY5REcKOHZHck56N2NMNkdvOWUxcDE0N2VRZFVEUU5PRW1sSWJrU1FEdUtZMUhmM0ZTb0ZBMW5WOUlCVzlEQTlYbWo4NQpuZlgya0pUZi9TUGRqWFA1SEZZMXVjNGRrU1JXZUU4UjlJZkwybTlpV2N1MVhnWTROUUtDQVFFQTNnbkIva3QwClJUc0t5SjMyb3Z4dlgyV1NnWHNQRWVPWG5GSlp1TldlY21STnRsTHUxVTN4UDNHTHMrN1hlcXFGY1N6elAyUWwKZGR5cmZSMEYvTEgvQW9zWlVJRUE5a1VPYTYrc05ja21ESkRyNmZlQ3g3c1gySzJESnNTMVpVdEVVMTZvZXNQbQowSXZ4aEZPNE9TS0Y4cTY1M3gvREE1VW1nV2tXU0I0YisrT2UzMk9MVy9nWGpoWW9Wdm9MTXRCTUIvQ1FhRDNSCkdualZBNTFNTktzMURUblNycUhHWGdkRjM0VE5WWExEeGkzMTBac1FtYjdtRXpwaHArbld4czRsZGxHcUs0K0QKL3JWamw1TGpoTExjZStUOUdscDc4dnlpOVNvL0Fwa01BM0RSVy9KbUdtRzNORjAzSURoS210UVlRUDZzRjZRdgpWZ014NzliaDE0a3owd0tDQVFFQTQ1YlJIU3VrWUtyRjJtaEY3ZmNqQ1hESUxNT2RVQUE1ekVLcHhRTWt1ZlQrCkxyOXd6QXk3ZGZqc0ZXZE1mZEw0TXVSWWRsNXl5ZXpUY1lOaUdqc1U5S2ZkWGFibEFPMjdacmdXRHV0enpBdWwKMnpUS2J0ck02Rmx2WFZKek53a3dwSTI5U2NlMEhqYVlRd21MNUZYWVpSMDluZ29xWWZLb2FBWStTMTh0aFNkeAorbGJCOHRpMzJmc0cweXNJWklEd3VnQXNsMm0vNy91VGtkZnpJbkNZeCtFTjlWeHRrQmpVZTJqZmR4cFU3RjhICmF4RHNUMWsySUdRUlROSTZYZi93bnpsMzFmU3dnR1c0SHlnTUZHRWdWY0kyTytEdFNBOCs5UXBlbEcySUNIaXAKdVp6ekFLL094M2NUNTZhMERPaFcrSFNVdm9paDd1KytYNGp1ODhWZ0h3S0NBUUJOeHlOQ1hkSUwwa1BUeEttNQpyQzJqUUNSUzRQV0ZjYkVSSERPN3NIREJaMnRsZTZXWDZLYWliN2JkUDhRUmZ4d2hhZnFIY1NCQ0todVVSdzlxCjFqc2ErL2pSSDI5ajFRclpJLzl5RTlVVlA4cXorWFRCWEVOZExtS3J1T3BGNGxpN3o0TzdCVmFjSlBsa1BpTmgKT0R1dHFCRUtITWttUHgvdTR3M2dFMVFBSjFybXE2c01lMXBjOWx3Skk2dTZrQWFpSFYyb2RrY0NPK042VWFaNQpLS1A3enc2REI3NUIvOUExSFFNRWRLQXBrcjN5UDV4UUR2UHZObHN4QTVPdHJsYW5ITEk4Y2hodHA4S01QUE1mCjc3dVdWcjltZE4zSVgwRUNHbHRhSUp4NXRCSlNZQlh1RmQ2a0pDY0VUVk9zNnJEWVM1Mmk1bXVDZUxvTVpyeFQKMFFickFvSUJBRW9MWlZtQ08yYWY2T01ZRGJoUU1Ydit6NEdRMnZ1T056KzNhSmlLWDBhSTZMRzQ0eS9mN0pXRApPUHYxc2JNMkVqNHNnSU55VXhKVEZLL1h1UEVqeTd1VmFiWHdlSTBHeTNPdDdLOUo5MUNwY1hxU0FGSjBxVG5tCjd3NkRwcXgvTnU0eWx5VUw3aFB1V3pka1FiazJITU00OGpVYXhaTThhWUgrbGdIYm8ybXczYW8rMDdiNHYwZ1MKSGJSU1NkYTVCSmpmT2FMQmF3cmU1TElNZWpQNFFoeTFvZDcwQlVsZWFyTUQrY0E4TnVqNE9lZWhoK0NBKzlVcAorVjd1L3NKYVpLVEpBNjMrZi9ZbUlmTXhDazBQRklBU1FhYlZsUjFlcUhMOHZxeTN2Z3hUaFpTMzlXK0J3MXF0CjZUSHkwSjFxY2ZFL3JLMFlzdWFUNVhJYmtQS0tncTBDZ2dFQkFKaU9iejV2akRZd2xnamMyNjlCK2k5NWU2cTMKN29xSllVQStLTFdMa2NDMTNuTWVhbUtXUUNaVEdNU3dOWTZXVkJVQkYzYjRqVjdyZzllNWVqNzVYWHNCdk1LSwpMdHY4ZW5zSWQvaFh0T1pIMlduVXNiSitkWlQ5N1drczVHVXFKbjZPUzhFaFFWNWkvc0lXa0c1akVlcVpFUWtqCjJZYmFlQU1PU0ZJWEpieHdzMEhOdFI0TE1QcERHZVdoQzkzQXpqcm1BQmluR29qNDdBQ1BBV3VXdW9oUno0TVEKY2JqaU90UHMzS2Q1VFhCeHJxeUQ3Mno0bm5zbEVERk5zS1QzdUIyVW42VVlKODJwcFFyaExBbk8yY2NHdHpPQwpLQk05L1VaNXduNlJlbHB0YTh1QUZzQXkxOUYxQlExS2NzRzVjbTVMaERWb0N4ZzQwN0RmQTA2UDI2dz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
  # vault ca
  # cacert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZmRENDQTJTZ0F3SUJBZ0lVSzE4aGNYblVUeUhNQjhhQmtKVTdRNE1OejY0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd0hERWFNQmdHQTFVRUF4TVJRMkZ1WVhabGNtRnNJRkp2YjNRZ1EwRXdIaGNOTVRnd016RTJNVGN6T0RFMQpXaGNOTWpNd016RTFNVGN6T0RRMVdqQXZNUzB3S3dZRFZRUURFeVJEWVc1aGRtVnlZV3dnVDNCbGNtRjBhVzl1CmN5QkpiblJsY20xbFpHbGhkR1VnUTBFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUMKQVFDcXJ3aVRRaHlYLzhoK21CcGk5S2hDd0kyQ1c3UDdUMGREWlhMSG9yc05KOFdUcGJrSnpWc0JSR2IyUFJIMApjTitFRXAyMFJRV2wvNHY2REswM3ErRnRDL1NzMVhqejRadjdyU2VBcUxhVmN2dmx1dE9LTXBBUWg2eElYcjBECjZqRE1qc2ptcThZSTc2SzZ3amZBTGhacitCL21uSlA5SnU4RS9sVWNzUUthZUxFS0IwSnQ5V2E4SlUvbG9jYlQKN1E5aHRLRHFFYUYxOHl2UWJRd2gvbSt6N09oQkRkclo4MGZPM2pxaXM5bkFKZnZkeWxFZkFzM3FrZHZPYVNBdQpiYjZuWHNydE5aeTA0eFJ0d0s4aHN3TXVzZDRKUG1XTTZkcGE3b01RNjVkU0hNem5kK3cxOE1SS0lxRTZUNkhyCm9JeER6VjJYekVOODE2RkNBT0dTb09hYU5EaHB1bm5KMm56NmpaU0dXU2xKd1FIQUVvZUdEVkhFeU53a0xKTmoKbG12UlVBMm1CVjBPYVRWdGJHVTRxazZJSVpDRGF1OTEzWGxqVDFuMytkcmRoMTNsVnZGKzdtTlBHbnZIdzBCOQphTEVjaDdIWlNrcmRxSDRrZDZrVWN3V2NIaVFSbHZVZ0hPR2lBTS8xdE9mYSt2L1d5K3JSK2IzSTFsaEk1aDlZCjQ1UURBNnpCdzV2cVl5VmdIVlhNU3dUTGJvQnEwWWg5RFZPaHFtN1Z1NnhkUjl5TGNVWTFxYUdaUUl5eXd4eUoKQnN0MG5pY0VjTlNQUmw5WUNiMGVXb3UydVVBUVNQRFUxMTVITE5PaXhXTzNsbzZHS2pnb2Fldzk1RXBqOWdTawpHZTJCU2QvdEl6c1h0TEFabjAwMHExM01UV1lMc2hyQVdSY2xsc2pYaXE0UENRSURBUUFCbzRHaU1JR2ZNQTRHCkExVWREd0VCL3dRRUF3SUJCakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRTb1UzRTh2S1gKNU5NdTJWVFppeWxuVWtuQTJUQWZCZ05WSFNNRUdEQVdnQlEyNFhGc29kNkRONGJ3RjF3TGZzK1pYZkd1UERBOApCZ2dyQmdFRkJRY0JBUVF3TUM0d0xBWUlLd1lCQlFVSE1BS0dJR2gwZEhBNkx5OXNiMk5oYkdodmMzUTZPREl3Ck1DOTJNUzl5YjI5MFgyTmhNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUFKbjN0ZWRpTGlXVVZiVzJLSlBvZGUKUTFKckdkWDM5RkxuZlV5V1Z5VzVZZGp3QnlMdnJkRlhld2g1em9IK051Sm01a01CR1QrQWJZMG9DaXFIdzVGdApNQ2o1T1JXSFhUakppOUV2REZmY09OUStpWmUyY1p0V3kyeTBRYVhCblNzUTdUZlp5K1hObWlZQTlVY1BwYXUyCnkrWXNWSkxLNFJzZjNIVkE1OEJnWllhekRuMnNKcE9iV2huSXNYbmRhUkd2YTM0MVA5VDVvRzlkSkJZVERKUUIKeEhuNkNEankxQ0JuTGFwalY0c2hYMFgyS1UxM3luWlV2amFUOGNnSVlkTmVGUUE3KzY0NDFybVdjOE1SbTZTSwpHNmVVaGlFbHRrL3ZNVFRSVldLSmVMUWUzTWJqY2J3dGRrNktvTzN3WTZxRGJCb0hHZUhHWm4yTkUzL3lLOTJaCm1TdjdPK2RORlZGc1MyTEZnUVNxVmZNVnVqK3BFWGwvQUlOZ0ZUY2thNnBEQVNQS0IxcmE3QmM2Q2EzZWc3bGQKRVF2SkJQblZzNDFYUXBaZVY2aVhNRXpmdXV5SDFsOHlSZmxFSmhrOXlQbDArU1BVSnpubS8wZ1lMSFQvdDNUbQpMOGZpT1F4MVNHRDdlZHNiTUJzcWJVNXo0N29Cd0dTRk1hRUFNeFJNMG1xS1UzSVhqQnVQNHpLQmRPSG83cGxxCjdIVE1QaVNsV0duU3FZTDRYTk1RcDIxQlcvQkVPRVNPYS9LLzJZeHVpb29tc1pOUDQ2eUxKTmFzUVEyUFFGVTIKM3NrU05lOWVoaXZrajRNZzh3RUhnZnFBQjBlL0JJbzJ5VndmTmdSRHNnZVdnam9pNndldFBDRC9PZStEQ3lMdQpEeExackRPWE8yRXI4S1cvc2I1dE9RPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRktUQ0NBeEdnQXdJQkFnSVVTZi9xT2lOeUJJUERYK3FjeS9WaDd6N3dpV0F3RFFZSktvWklodmNOQVFFTApCUUF3SERFYU1CZ0dBMVVFQXhNUlEyRnVZWFpsY21Gc0lGSnZiM1FnUTBFd0hoY05NVGd3TXpFMk1UY3lOalUwCldoY05Namd3TXpFek1UY3lOekl5V2pBY01Sb3dHQVlEVlFRREV4RkRZVzVoZG1WeVlXd2dVbTl2ZENCRFFUQ0MKQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFNYXR5dlM0TjJKVUVJSlZzVnhpNGg5RgpJa1N5UXdaUi9nWHlOaGFON2F2NWpPelV2WmN0clFWcExqaGZRZlpFZkhUa2RyYXVtMUlnRDMwR01xYVowYi9RClVHKzU0WXZVNFpBS1hhMG8ySWhSeUFFR3FCenVNakZGRzFKc1FKK2dKWTE3eXZiaExVK0JTcjkrVy9xeWV0SHQKb2VoSWFabGcrcnRmcFNzSm8ycVlLNFA1UWMvL29jbjhiTTYrb2IrcXQ3VUFPTWZHWDlJQ2lsRUY5V09XMFpsZQp2TlZqai9HTldMaFVNNUJTY05kMDlGc0RRTTg2SGJBUWlQZlhOUmJBNURBcTFjWWV0NWI1NjVVU3hta3pJem1BCmxRUy9IdTYxV3lzelc4aW9LdzEzRnFzMjZJY0N1N2cyRkNPZTdmV3Q2YUdFNW5xeENBZXVuVWZmK3J6dGFFWVoKeU5ibjRHejJjVDdZc2ExMzdYbjMrNXBlZENkcEdWUGZsUkdBRUpSOExDZ2x6d0ZBeVA4NktqZGtBV3pXaVRyNgpHbWVRNzN5Q1VxbnhFdXhhYXRwcmRxdFFrbVZuK0ZTRTlpWWoweEJRVUE0cDUwWDNIT3pyU3ZuR1hsUFMycWV4Ci92d2xlOEM2d1R0VXBqeGRwdWRaaVljZk9QbWJmMUZNTzVyY3BlSnQ3YlMyR1JjOTJaZVZ5dEVPQ25HYVJITVEKQy8wTHhpUzJlVWhmUnRnYzBJNnB6RFZMbEVlYmU5aHU1cmRwMjdPQTB2UmNrT3ZieGFOY21pVG5rNG9GaDJmYwptbTZIOGhNaXFmUVUrRXA4MnBTNy80T09EbHVKd0hnNHpEdUh6cGZNQ1BxUHhUR01WRUZBWnkzMERDV1MyWGdxCm0rdzhHcGZ2RHpqQ3oxQUZ2QWliQWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRMjRYRnNvZDZETjRid0Yxd0xmcytaWGZHdVBEQWZCZ05WSFNNRQpHREFXZ0JRMjRYRnNvZDZETjRid0Yxd0xmcytaWGZHdVBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFMUzgwCmFOQTdJNVo0dU1LMitrVDdtakRVWnFoYlEwOGhqZENsVXdEL21Bc2Z5NkM4MXlVZmV3b3hxM09jc1Q2VUpIZlYKVUplSHBYWWVTdThTUm5JTGJ3ZEY4dFAzUWxsLzN3MUd6WHVrcHQ2VVg5eWhEMHNIVXh2VUIwVlRPVDZmVHVMNQpWSmdmVFBYRTFBR0YxMVFucUxHUkVnNU5IVlB4UG41Z2NXazBweHVZemw1YmprV0JkTmxaeEhmWmlISU5tbnEvCjBibmdyblQ3VlkrUTdpai9BMFJtTFpOcnlMY2ExT0xTNlNZSTFlbm9YSEJGZGlXa1drUHVScGExVXo0TzByQTEKWDhCbHNVQmg0ZGU4ajd2TWp4SjgxNmhsWXFLdmxHMzczbWZQVTBiRmcxM0g0UEFLekNFYndzZlRTZ25PUXZrVgpRUU1veVdaWWRGS1Mzd3dldFZHMDYrNGZNQ25Od0ZCdUMzUWtTSWIxc2tESzB6VjROWVZzSTFVVUliTFg1bkR6CjRoK045ekZmQU1mckVnWjNpbmNtYmJOUzJqNFRoUy9DQ2laNm1pdnh2Tzd3Z25TTGd1TEJKZ2wrUE1JeEpJVEsKNG42bHAzZERadWdWMEpFajc4cjBYbWhQc3JHSS9QaDBGRHl0VzVGRnl2Ulc5alczZXBLMHJQNGJhQXJ5MnNRVApSd2t3VkdIdGpzYXE2dEorZEZVTUhQem1pUWc4dk9iVDYyUWs4SjdOVWRmMVZieHpYSFZ2N2NiK210OEZzcHJ4Cmt3RTdEZzB5QmFuR00wNm16SzJldGVxdkxlRjc3eXJOcExjZWEyUm13aURzSWg2ZG5sNzB2R1cyUHIrNnhTbmoKWUd5QnFNRFdrMW45b3AycHFJYnVMZ3NXK1FKRHJZU2ZCWGtNT2ZjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  # cakey: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBcXE4SWswSWNsLy9JZnBnYVl2U29Rc0NOZ2x1eiswOUhRMlZ5eDZLN0RTZkZrNlc1CkNjMWJBVVJtOWowUjlIRGZoQktkdEVVRnBmK0wrZ3l0TjZ2aGJRdjByTlY0OCtHYis2MG5nS2kybFhMNzViclQKaWpLUUVJZXNTRjY5QStvd3pJN0k1cXZHQ08raXVzSTN3QzRXYS9nZjVweVQvU2J2QlA1VkhMRUNtbml4Q2dkQwpiZlZtdkNWUDVhSEcwKzBQWWJTZzZoR2hkZk1yMEcwTUlmNXZzK3pvUVEzYTJmTkh6dDQ2b3JQWndDWDczY3BSCkh3TE42cEhiem1rZ0xtMitwMTdLN1RXY3RPTVViY0N2SWJNRExySGVDVDVsak9uYVd1NkRFT3VYVWh6TTUzZnMKTmZERVNpS2hPaytoNjZDTVE4MWRsOHhEZk5laFFnRGhrcURtbWpRNGFicDV5ZHA4K28yVWhsa3BTY0VCd0JLSApoZzFSeE1qY0pDeVRZNVpyMFZBTnBnVmREbWsxYld4bE9LcE9pQ0dRZzJydmRkMTVZMDlaOS9uYTNZZGQ1VmJ4CmZ1NWpUeHA3eDhOQWZXaXhISWV4MlVwSzNhaCtKSGVwRkhNRm5CNGtFWmIxSUJ6aG9nRFA5YlRuMnZyLzFzdnEKMGZtOXlOWllTT1lmV09PVUF3T3N3Y09iNm1NbFlCMVZ6RXNFeTI2QWF0R0lmUTFUb2FwdTFidXNYVWZjaTNGRwpOYW1obVVDTXNzTWNpUWJMZEo0bkJIRFVqMFpmV0FtOUhscUx0cmxBRUVqdzFOZGVSeXpUb3NWanQ1YU9oaW80CktHbnNQZVJLWS9ZRXBCbnRnVW5mN1NNN0Y3U3dHWjlOTkt0ZHpFMW1DN0lhd0ZrWEpaYkkxNHF1RHdrQ0F3RUEKQVFLQ0FnRUFqd0hFVDQxdTQ3Tzl5c09xS0FzUkI0ekpnOVZOd1Z3MU96UytyS0dkMDNIbFNzWHBlVnNEeXRZQwo1b0ZZajlRYWtrLytybEcrWDh6eS9QaXVFUjBEN1JlOVV5b3hBeldlT1lwa3RKbW5FU1NjQldrNVlHcm81ZENtCitxUFYvbmV6bDFCeTUwSTQxTGZqUWxNRDN4TStXZ3cwdmtXbWdNNmtLU3puSnZqd1UzaVg3TzBVTFlrVklNS3EKWkozZE55ZENZZnl6YmlxRGU0M1l3Zkw3M1dlUE05Tms3VXlzZHp3c2lCa09TOUFndTZ1WGtjYTNuU0grWVhFQQpGN3RnNlVXdUhoR0FPS3RZdHY0ajJhazlreUNuby9JSE5QdUFua1k1VzBMSHNkK1NrNHZwNm01Q0RSZkRmdEh4CkFDaEVaR1hKMyswclk4b1RLWUNKYmdISy9jMnVKMW9OZmN2TE80R2JoZ3ViVTRDSzZBelFyMkJaaWw3OWp1MkIKMTJ5TTdSdHRERnkwMU85Zm9aZFpmZE1Fa0pDZDcwNjAwVjIzZmdMYUJXWUFkcDRyUVdWYVlBY3JDQytYQ0hjegpYdmVmZlk2Sm5VMXdVVVhCL05MWk9Mb3BGaHNCZ2NZSktPUDV4NHJXMHF6Kzd0TmxrTXJIZFkrZXJ0eW1uZTB4CnkwUkdXQTJaTnllKzI4Rjg0Tit0b2YrN0NLc2xJZlRjdkZPOGhPZHMrRnd2VkZDMHcrc2Z6K3drR2xUcXMvSzEKaDhBNVJHYisyWlhJR2FLQnZ3VVhESmNQc1p2SmhGVVMrVVZNaWNxamRxVldJQzJUYks2SXJvZjZuUWZTemVOagpKOGlnOWQ3cE12UUpPUDh6OUtiWklhN0FURDIyWnRFbDRGUWRmVU9uRno1aEJxdnJkbUVDZ2dFQkFPSDFGRjJiCldCVEhsWTJaOWNaV0ViWGJoUlZybWV2Y1JBWTVneExkT1N6MTJCckpDL01EcTF5UUgzMWNNSkNXeFcrNE1UWWMKaXZodmt0Q0c3RWwwWmd1bHdlZmxWWVlIMTZHU0dQTDdSY0IyNDlzeWRuQjBlbVNRTndyVGtHcmJjUVpkZ0FVcwpTR2FnYlo0a2drS1FVNTdKcklXSU1MYTJ2QlMrSWdiTU1lUjlLSFB5K1dlRVBIWVF0c3BPNWYwaSttcWxGUnhCCkpTTE9QYXMvOXVibnBlbUZLOWprZlQ3cTdDQlA2OTVKb0hCMXZoak1yeUpZUVBud1FSMVhmVzc1WGZjckUxVkYKTzRMRVh5dk1aNFo4MEE2eWpRVkJaUzZ0SWVINUE0bi9EdXB1M280VnRlOHBDTlFDT2hhbE5nZE9JZDVwdnROcgpCRlRXbTJ5OE8yaS9Sd1VDZ2dFQkFNRmdtbkRkWjBLRS9sTUJkYWVkME12Y2pzOU51R3BXbzhjUGpVLzFnZkFmClVzS2cvVG5SQmV3c1hMWGdEWlpGSjhJaVVaM05nRnBpbHlRbnN0TTN6T2FhK1loRDBtRnUxVVl3YXFYZTFKK0QKVlpmUlpsamltWlhKbzVrS3FjM3RPSU5ETE1iOGRJUkJmdlpnNmJjVVJYYWl0N1lCZzd3V2hvcmVtWWlYYnRtagpBNHY2TGM2YUZDZlpoeVRzTEpjZ00xY2hHbldCYVpobThET2Y2cUJTd0UxQVEwY0ViL2lpZWNlTDhFSC9VVWVoCnFEYmowczg2MEZkanhYSmVMMFNrVlRQcXVCNUR5NUxyVnRIMjlCQ2xUbkdZZjB6UGs3Wm5QaVVFcTBuRkh3Y3AKY0pKMnJJbjlidTd2NTk3TjBhYWM4aUZzSVM5eURDVU5zdjBkTEtNTDN6VUNnZ0VBRnozVE0zR29GTE1Xd2ZMbApJZHAyaGVNbmhEV0dKb21JZ2E5bXVRa0NPWXFzQ00xSEtsN2xRR2NlcGhGV2VYallwQTRwR2F6RDZwdm5XUVdYCnhsSnZzS0VER2V3djZOSmpycDNOYlNqRld1K2Zya3M1ZllXdGxTeDBUT3ZIL2dYR1VXWktwYjJSVU9VTmdXZTEKOGt6UUhSUVhaOEREYWZmUHpyNWoxNWtuUko1UEMrWWhHekd4Mmw4THZqRnhYS0U5YXJ6Q09CN0hTQlk0cDZXegpxcnFIQ1VjR1pJL1VCaVc1MWZVQ2lPRy8yL0Z3ZFRLUWpSTFExQ1NQUGdwaXY0aHN6dUNpWTNIMGxoWEd5RVdGCkhJTTREMXIwUUdjaWxqTit1YlNZVlpoam0xOStDdFZXMmx1NUtiMTA1aUZtTmtnbUdhOTh6bGhDb010V1AwLzUKT0dQOFZRS0NBUUF6RVNyWDRYQXlmZUtYMHd2YUR2QWoxZ1FVdE1hZHRuR2IwUHlWZ0JVbmIyNHduY2tocXBSdwowU3BPa1hPbEduQXNjVm15WGFHbXZPQ0RHTVM5eUwrZ3FvNTVNTWZ2R1JEVGIxZktvL1RzaHdka2gxVUs1aFIvCkhQZktJNm5DQ3dKZ2o2M1VncmpXY0dGeCtSZmZWRWdmMDByR2t0SFNLdlN1MmFnY0RUbWwyY25HL25ONFd2STEKcjlsam84Y0d4ZWNvL0VIN2hBaDV5YjFuTkxVR1Q3UWU4bmlSMlpja1J1djRDWG1TUkRXWHdCWW5JTFQ4S3VENApJdzN5YlBMNG9wa3BrN081c2xlaFhlclltZW5NTjR0bXJrbjM0OTF6VHdKM1RpdFoyT2Vmd1k3TDd2RVRvOHpXCjVwNEtGYnBtMEkyVXkvUmJqamVzMVZoT1JaVVRIY0I5QW9JQkFRQ2pKV0xBZEZDVUgxbGJvMXlWbWh0eFQya1EKMHZlOVV0RmZ4cnNMNnlhMVNkNjFCeHR1VjdmdWIzWjE1RkVSMU1wQnZKWXd5TXdEOHNnaWM3RnlZdnNpWXQrdQppRDVZMTBBWmJ3ZGV2T1pGVytwZGFMVU5ONlovVUo1dXhUTllwOStTblNKclBEQm9OK2VlNVNFUndoSUlkNmpNCnZoQmplTGhsNjhYcTJkOHJ2SldOMFFZa3ljWlI5UkdlOGtaeVUvL0MrTHE3OEpkSCtFSGg3cHpHT095SmsvK3UKeFlYUzdWZEx1NnNjM2NBZ09nOFB5OFZvSzJ4YnVSb2NDSndPQlBmZC8vZUhuZTdySHhhWk1lMnBBVDNDaWRPQwpIVGpNdDRjc2FMVDVhRUpEc0d4QWRKQXpnV0M4c1NDS0NGYzlMR1ptSVlwUVdaeWtQSzNOVjVmdjE4WkcKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0=

# Entries for the MongoDB config file
configmap:
  storage:
    dbPath: /data/db
  net:
    port: 27017
    # For Mongo 3.6 we also need to bind to outside world
    bindIpAll: true
    # Uncomment for TLS support
    # ssl:
    #   mode: requireSSL
    #   CAFile: /ca/tls.crt
    #   PEMKeyFile: /work-dir/mongo.pem
    #   clusterFile: /work-dir/mongo.pem
  # replication:
  #  replSetName: rs0
  # Uncomment for TLS support or keyfile access control without TLS
  # security:
  #   authorization: enabled
  #   clusterAuthMode: sendX509
  #   keyFile: /keydir/key.txt
